// Code generated by mockery v2.46.3. DO NOT EDIT.

package spinnerhuh

import mock "github.com/stretchr/testify/mock"

// MockHuhSpinner is an autogenerated mock type for the HuhSpinner type
type MockHuhSpinner struct {
	mock.Mock
}

// Action provides a mock function with given fields: _a0
func (_m *MockHuhSpinner) Action(_a0 func()) HuhSpinner {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Action")
	}

	var r0 HuhSpinner
	if rf, ok := ret.Get(0).(func(func()) HuhSpinner); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(HuhSpinner)
		}
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *MockHuhSpinner) Run() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Run")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Title provides a mock function with given fields: _a0
func (_m *MockHuhSpinner) Title(_a0 string) HuhSpinner {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Title")
	}

	var r0 HuhSpinner
	if rf, ok := ret.Get(0).(func(string) HuhSpinner); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(HuhSpinner)
		}
	}

	return r0
}

// NewMockHuhSpinner creates a new instance of MockHuhSpinner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHuhSpinner(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHuhSpinner {
	mock := &MockHuhSpinner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
