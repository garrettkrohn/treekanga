// Code generated by mockery v2.53.3. DO NOT EDIT.

package sesh

import (
	common "github.com/garrettkrohn/treekanga/common"
	mock "github.com/stretchr/testify/mock"
)

// MockSesh is an autogenerated mock type for the Sesh type
type MockSesh struct {
	mock.Mock
}

type MockSesh_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSesh) EXPECT() *MockSesh_Expecter {
	return &MockSesh_Expecter{mock: &_m.Mock}
}

// SeshConnect provides a mock function with given fields: c
func (_m *MockSesh) SeshConnect(c *common.AddConfig) {
	_m.Called(c)
}

// MockSesh_SeshConnect_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SeshConnect'
type MockSesh_SeshConnect_Call struct {
	*mock.Call
}

// SeshConnect is a helper method to define mock.On call
//   - c *common.AddConfig
func (_e *MockSesh_Expecter) SeshConnect(c interface{}) *MockSesh_SeshConnect_Call {
	return &MockSesh_SeshConnect_Call{Call: _e.mock.On("SeshConnect", c)}
}

func (_c *MockSesh_SeshConnect_Call) Run(run func(c *common.AddConfig)) *MockSesh_SeshConnect_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*common.AddConfig))
	})
	return _c
}

func (_c *MockSesh_SeshConnect_Call) Return() *MockSesh_SeshConnect_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockSesh_SeshConnect_Call) RunAndReturn(run func(*common.AddConfig)) *MockSesh_SeshConnect_Call {
	_c.Run(run)
	return _c
}

// NewMockSesh creates a new instance of MockSesh. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSesh(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSesh {
	mock := &MockSesh{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
