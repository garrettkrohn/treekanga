// Code generated by mockery v2.53.3. DO NOT EDIT.

package directoryReader

import mock "github.com/stretchr/testify/mock"

// MockDirectoryReader is an autogenerated mock type for the DirectoryReader type
type MockDirectoryReader struct {
	mock.Mock
}

type MockDirectoryReader_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDirectoryReader) EXPECT() *MockDirectoryReader_Expecter {
	return &MockDirectoryReader_Expecter{mock: &_m.Mock}
}

// GetFoldersInDirectory provides a mock function with given fields: dirPath
func (_m *MockDirectoryReader) GetFoldersInDirectory(dirPath string) ([]string, error) {
	ret := _m.Called(dirPath)

	if len(ret) == 0 {
		panic("no return value specified for GetFoldersInDirectory")
	}

	var r0 []string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]string, error)); ok {
		return rf(dirPath)
	}
	if rf, ok := ret.Get(0).(func(string) []string); ok {
		r0 = rf(dirPath)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(dirPath)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockDirectoryReader_GetFoldersInDirectory_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFoldersInDirectory'
type MockDirectoryReader_GetFoldersInDirectory_Call struct {
	*mock.Call
}

// GetFoldersInDirectory is a helper method to define mock.On call
//   - dirPath string
func (_e *MockDirectoryReader_Expecter) GetFoldersInDirectory(dirPath interface{}) *MockDirectoryReader_GetFoldersInDirectory_Call {
	return &MockDirectoryReader_GetFoldersInDirectory_Call{Call: _e.mock.On("GetFoldersInDirectory", dirPath)}
}

func (_c *MockDirectoryReader_GetFoldersInDirectory_Call) Run(run func(dirPath string)) *MockDirectoryReader_GetFoldersInDirectory_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockDirectoryReader_GetFoldersInDirectory_Call) Return(_a0 []string, _a1 error) *MockDirectoryReader_GetFoldersInDirectory_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockDirectoryReader_GetFoldersInDirectory_Call) RunAndReturn(run func(string) ([]string, error)) *MockDirectoryReader_GetFoldersInDirectory_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDirectoryReader creates a new instance of MockDirectoryReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDirectoryReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDirectoryReader {
	mock := &MockDirectoryReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
