// Code generated by mockery v2.46.3. DO NOT EDIT.

package zoxide

import mock "github.com/stretchr/testify/mock"

// MockZoxide is an autogenerated mock type for the Zoxide type
type MockZoxide struct {
	mock.Mock
}

// AddPath provides a mock function with given fields: path
func (_m *MockZoxide) AddPath(path string) error {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for AddPath")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemovePath provides a mock function with given fields: path
func (_m *MockZoxide) RemovePath(path string) error {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for RemovePath")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockZoxide creates a new instance of MockZoxide. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockZoxide(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockZoxide {
	mock := &MockZoxide{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
