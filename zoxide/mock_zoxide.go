// Code generated by mockery v2.53.3. DO NOT EDIT.

package zoxide

import (
	common "github.com/garrettkrohn/treekanga/common"
	mock "github.com/stretchr/testify/mock"
)

// MockZoxide is an autogenerated mock type for the Zoxide type
type MockZoxide struct {
	mock.Mock
}

type MockZoxide_Expecter struct {
	mock *mock.Mock
}

func (_m *MockZoxide) EXPECT() *MockZoxide_Expecter {
	return &MockZoxide_Expecter{mock: &_m.Mock}
}

// AddPath provides a mock function with given fields: path
func (_m *MockZoxide) AddPath(path string) error {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for AddPath")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockZoxide_AddPath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddPath'
type MockZoxide_AddPath_Call struct {
	*mock.Call
}

// AddPath is a helper method to define mock.On call
//   - path string
func (_e *MockZoxide_Expecter) AddPath(path interface{}) *MockZoxide_AddPath_Call {
	return &MockZoxide_AddPath_Call{Call: _e.mock.On("AddPath", path)}
}

func (_c *MockZoxide_AddPath_Call) Run(run func(path string)) *MockZoxide_AddPath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockZoxide_AddPath_Call) Return(_a0 error) *MockZoxide_AddPath_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockZoxide_AddPath_Call) RunAndReturn(run func(string) error) *MockZoxide_AddPath_Call {
	_c.Call.Return(run)
	return _c
}

// AddZoxideEntries provides a mock function with given fields: c
func (_m *MockZoxide) AddZoxideEntries(c *common.AddConfig) {
	_m.Called(c)
}

// MockZoxide_AddZoxideEntries_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddZoxideEntries'
type MockZoxide_AddZoxideEntries_Call struct {
	*mock.Call
}

// AddZoxideEntries is a helper method to define mock.On call
//   - c *common.AddConfig
func (_e *MockZoxide_Expecter) AddZoxideEntries(c interface{}) *MockZoxide_AddZoxideEntries_Call {
	return &MockZoxide_AddZoxideEntries_Call{Call: _e.mock.On("AddZoxideEntries", c)}
}

func (_c *MockZoxide_AddZoxideEntries_Call) Run(run func(c *common.AddConfig)) *MockZoxide_AddZoxideEntries_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*common.AddConfig))
	})
	return _c
}

func (_c *MockZoxide_AddZoxideEntries_Call) Return() *MockZoxide_AddZoxideEntries_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockZoxide_AddZoxideEntries_Call) RunAndReturn(run func(*common.AddConfig)) *MockZoxide_AddZoxideEntries_Call {
	_c.Run(run)
	return _c
}

// RemovePath provides a mock function with given fields: path
func (_m *MockZoxide) RemovePath(path string) error {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for RemovePath")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockZoxide_RemovePath_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RemovePath'
type MockZoxide_RemovePath_Call struct {
	*mock.Call
}

// RemovePath is a helper method to define mock.On call
//   - path string
func (_e *MockZoxide_Expecter) RemovePath(path interface{}) *MockZoxide_RemovePath_Call {
	return &MockZoxide_RemovePath_Call{Call: _e.mock.On("RemovePath", path)}
}

func (_c *MockZoxide_RemovePath_Call) Run(run func(path string)) *MockZoxide_RemovePath_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockZoxide_RemovePath_Call) Return(_a0 error) *MockZoxide_RemovePath_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockZoxide_RemovePath_Call) RunAndReturn(run func(string) error) *MockZoxide_RemovePath_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockZoxide creates a new instance of MockZoxide. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockZoxide(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockZoxide {
	mock := &MockZoxide{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
